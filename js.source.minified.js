function KS_CONNECTOR(e=window.log||console.log){const t={default:"yellow",error:"red"},LOG=(s,i="default")=>{!this.disableLogs&&s&&e("%c[KS_JS_API] "+s.toString(),`color: ${t[i]||t.default}; background-color: #171717`)};this.disableLogs=!1,this.tx=null,this.rx=null,this.onmessage=function onKSMessage(e){LOG("message received: "+e)},this.onready=function onready(){LOG("warning: .onready not set")},this.isReady=!1,this.disable=!1;{let e=this.onready;Object.defineProperty(this,"onready",{get:()=>e,set:t=>{e=t,this.isReady&&t()}})}this.send=e=>{if(!this.tx)return LOG("tx div not found","error");this.tx.textContent=e,this.tx.click()};const s=setInterval((()=>{if(this.disable)return clearInterval(s);if(this.rx=document.getElementById("KS_TX"),this.tx=document.getElementById("KS_RX"),this.rx&&this.tx)new MutationObserver((e=>{for(let t=1;t<e.length;t+=2)this.onmessage(e[t].addedNodes[0].textContent)})).observe(this.rx,{childList:!0}),clearInterval(s),LOG("API ready"),this.onready(),this.isReady=!0;else if("function"==typeof window.getGameActivity){const e=window.getGameActivity();let t=!1;"Guest"!==e.user&&(t=!e.isCustom),t&&(LOG("Disabled due to game being pub","error"),clearInterval(s),this.disable=!0)}}),1e3);this.LabelHandlerMgr=function LabelHandlerMgr(){this.handlers={},this.addHandler=(e,t)=>{this.handlers[e]=t},this.removeHandler=e=>{delete this.handlers[e]},this.bindToAPI=t=>{LOG("binding LabelHandlerMgr to API.onmessage"),t.onmessage=t=>{if(t.includes(","))try{const e=t.split(",");if(this.handlers[e[0]]){const t=e[0];e.shift(),this.handlers[t](e)}else LOG('LabelHandlerMgr > No label named "'+e[0]+'". Data recieved: '+t,"error")}catch(s){LOG("LabelHandlerMgr > Decoding api message resulted in error. message: "+t,"error"),e(s)}else LOG("LabelHandlerMgr > API sent a non-array message: "+t,"error")}}}}